/*
 * generated by Xtext 2.29.0
 */
package org.example.xbase.expressions.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.eclipse.xtext.xbase.XMemberFeatureCall
import org.example.xbase.expressions.expressions.EvalExpression
import org.example.xbase.expressions.expressions.ExpressionsModel
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

import static org.junit.jupiter.api.Assertions.*

@ExtendWith(InjectionExtension)
@InjectWith(ExpressionsInjectorProvider)
class ExpressionsParsingTest {

	@Inject extension ParseHelper<ExpressionsModel>

	@Test
	def void loadModel() {
		val result = parse('''
			println("Hello Xtext!")
		''')
		assertNotNull(result)
	}

	@Test
	def void testEvalExpression() {
		'''
			val i = 0
			eval i
		'''.parse.expressions.last => [
			assertTrue(it instanceof EvalExpression)
		]
	}

	@Test
	def void testEvalExpressionAsReceiver() {
		'''
			val i = 0
			(eval i).toString
		'''.parse.expressions.last => [
			assertTrue((it as XMemberFeatureCall).actualReceiver instanceof EvalExpression, "type " + class)
		]
	}

	@Test
	def void testEvalExpressionAssociativity() {
		'''
			val i = 0
			eval i.toString
		'''.parse.expressions.last => [
			assertTrue((it as EvalExpression).expression instanceof XMemberFeatureCall, "type " + class)
		]
	}
}
